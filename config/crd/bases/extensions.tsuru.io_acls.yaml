---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: acls.extensions.tsuru.io
spec:
  group: extensions.tsuru.io
  names:
    kind: ACL
    listKind: ACLList
    plural: acls
    singular: acl
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ACL is the Schema for the acls API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ACLSpec defines the desired state of ACL
            properties:
              destinations:
                items:
                  properties:
                    externalDNS:
                      properties:
                        name:
                          type: string
                        ports:
                          items:
                            properties:
                              number:
                                type: integer
                              protocol:
                                type: string
                            required:
                            - number
                            - protocol
                            type: object
                          type: array
                      required:
                      - name
                      type: object
                    externalIP:
                      properties:
                        ip:
                          type: string
                        ports:
                          items:
                            properties:
                              number:
                                type: integer
                              protocol:
                                type: string
                            required:
                            - number
                            - protocol
                            type: object
                          type: array
                      required:
                      - ip
                      type: object
                    rpaasInstance:
                      properties:
                        instance:
                          type: string
                        serviceName:
                          type: string
                      required:
                      - instance
                      - serviceName
                      type: object
                    ruleID:
                      type: string
                    tsuruApp:
                      type: string
                    tsuruAppPool:
                      type: string
                  type: object
                type: array
              source:
                properties:
                  rpaasInstance:
                    properties:
                      instance:
                        type: string
                      serviceName:
                        type: string
                    required:
                    - instance
                    - serviceName
                    type: object
                  tsuruApp:
                    type: string
                  tsuruJob:
                    type: string
                type: object
            required:
            - destinations
            - source
            type: object
          status:
            description: ACLStatus defines the observed state of ACL
            properties:
              errors:
                items:
                  properties:
                    error:
                      type: string
                    ruleID:
                      type: string
                  required:
                  - error
                  - ruleID
                  type: object
                type: array
              networkPolicy:
                type: string
              ready:
                type: boolean
              reason:
                type: string
              stale:
                items:
                  properties:
                    ruleID:
                      type: string
                    rules:
                      items:
                        description: NetworkPolicyEgressRule describes a particular
                          set of traffic that is allowed out of pods matched by a
                          NetworkPolicySpec's podSelector. The traffic must match
                          both ports and to. This type is beta-level in 1.8
                        properties:
                          ports:
                            description: List of destination ports for outgoing traffic.
                              Each item in this list is combined using a logical OR.
                              If this field is empty or missing, this rule matches
                              all ports (traffic not restricted by port). If this
                              field is present and contains at least one item, then
                              this rule allows traffic only if the traffic matches
                              at least one port in the list.
                            items:
                              description: NetworkPolicyPort describes a port to allow
                                traffic on
                              properties:
                                endPort:
                                  description: If set, indicates that the range of
                                    ports from port to endPort, inclusive, should
                                    be allowed by the policy. This field cannot be
                                    defined if the port field is not defined or if
                                    the port field is defined as a named (string)
                                    port. The endPort must be equal or greater than
                                    port.
                                  format: int32
                                  type: integer
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: The port on the given protocol. This
                                    can either be a numerical or named port on a pod.
                                    If this field is not provided, this matches all
                                    port names and numbers. If present, only traffic
                                    on the specified protocol AND port will be matched.
                                  x-kubernetes-int-or-string: true
                                protocol:
                                  default: TCP
                                  description: The protocol (TCP, UDP, or SCTP) which
                                    traffic must match. If not specified, this field
                                    defaults to TCP.
                                  type: string
                              type: object
                            type: array
                          to:
                            description: List of destinations for outgoing traffic
                              of pods selected for this rule. Items in this list are
                              combined using a logical OR operation. If this field
                              is empty or missing, this rule matches all destinations
                              (traffic not restricted by destination). If this field
                              is present and contains at least one item, this rule
                              allows traffic only if the traffic matches at least
                              one item in the to list.
                            items:
                              description: NetworkPolicyPeer describes a peer to allow
                                traffic to/from. Only certain combinations of fields
                                are allowed
                              properties:
                                ipBlock:
                                  description: IPBlock defines policy on a particular
                                    IPBlock. If this field is set then neither of
                                    the other fields can be.
                                  properties:
                                    cidr:
                                      description: CIDR is a string representing the
                                        IP Block Valid examples are "192.168.1.1/24"
                                        or "2001:db9::/64"
                                      type: string
                                    except:
                                      description: Except is a slice of CIDRs that
                                        should not be included within an IP Block
                                        Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                        Except values will be rejected if they are
                                        outside the CIDR range
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - cidr
                                  type: object
                                namespaceSelector:
                                  description: "Selects Namespaces using cluster-scoped
                                    labels. This field follows standard label selector
                                    semantics; if present but empty, it selects all
                                    namespaces. \n If PodSelector is also set, then
                                    the NetworkPolicyPeer as a whole selects the Pods
                                    matching PodSelector in the Namespaces selected
                                    by NamespaceSelector. Otherwise it selects all
                                    Pods in the Namespaces selected by NamespaceSelector."
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                                podSelector:
                                  description: "This is a label selector which selects
                                    Pods. This field follows standard label selector
                                    semantics; if present but empty, it selects all
                                    pods. \n If NamespaceSelector is also set, then
                                    the NetworkPolicyPeer as a whole selects the Pods
                                    matching PodSelector in the Namespaces selected
                                    by NamespaceSelector. Otherwise it selects the
                                    Pods matching PodSelector in the policy's own
                                    Namespace."
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                  type: object
                              type: object
                            type: array
                        type: object
                      type: array
                  required:
                  - ruleID
                  - rules
                  type: object
                type: array
              warningErrors:
                items:
                  type: string
                type: array
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
